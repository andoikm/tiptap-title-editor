{"version":3,"file":"index.js","sources":["../src/TitleMark.ts","../src/tooltipManager.ts"],"sourcesContent":["import { Mark, mergeAttributes } from '@tiptap/core';\n\nexport interface TitleMarkOptions {\n  HTMLAttributes?: Record<string, any>;\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    title: {\n      /**\n       * Set a title mark\n       */\n      setTitle: (attributes: { title: string }) => ReturnType;\n      /**\n       * Toggle a title mark\n       */\n      toggleTitle: (attributes: { title: string }) => ReturnType;\n      /**\n       * Unset a title mark\n       */\n      unsetTitle: () => ReturnType;\n    };\n  }\n}\n\nexport const TitleMark = Mark.create<TitleMarkOptions>({\n  name: 'title',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n    };\n  },\n\n  addAttributes() {\n    return {\n      title: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-title'),\n        renderHTML: attributes => {\n          if (!attributes.title) {\n            return {};\n          }\n          return {\n            'data-title': attributes.title,\n          };\n        },\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span[data-title]',\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'span',\n      mergeAttributes(this.options.HTMLAttributes || {}, HTMLAttributes),\n      0,\n    ];\n  },\n\n  addCommands() {\n    return {\n      setTitle:\n        attributes =>\n        ({ commands }) => {\n          return commands.setMark(this.name, attributes);\n        },\n      toggleTitle:\n        attributes =>\n        ({ commands }) => {\n          return commands.toggleMark(this.name, attributes);\n        },\n      unsetTitle:\n        () =>\n        ({ commands }) => {\n          return commands.unsetMark(this.name);\n        },\n    };\n  },\n});\n","// @ts-ignore\nimport tippy from 'tippy.js';\n\nexport interface TooltipOptions {\n  placement?: 'top' | 'bottom' | 'left' | 'right';\n  arrow?: boolean;\n  theme?: string;\n  animation?: string;\n  duration?: [number, number];\n  interactive?: boolean;\n  zIndex?: number;\n  trigger?: string;\n  hideOnClick?: boolean;\n}\n\nexport class TooltipManager {\n  private static instances: Map<Element, any> = new Map();\n  private static subscriptions: Map<Element, MutationObserver> = new Map();\n\n  /**\n   * Initialize tooltips for a container\n   */\n  static initTooltips(container: Element, options: TooltipOptions = {}) {\n    if (!container) return;\n\n    // Remove existing tooltips from this container\n    this.cleanupTooltips(container);\n\n    // Add tooltips to title-marked elements\n    const titleElements = container.querySelectorAll('[data-title]');\n    titleElements.forEach(element => {\n      const title = element.getAttribute('data-title');\n      if (title) {\n        const instance = tippy(element, {\n          content: title,\n          placement: options.placement || 'top',\n          arrow: options.arrow !== false,\n          theme: options.theme || 'light-border',\n          animation: options.animation || 'scale',\n          duration: options.duration || [200, 150],\n          interactive: options.interactive !== false,\n          appendTo: () => document.body,\n          zIndex: options.zIndex || 9999,\n          trigger: options.trigger || 'mouseenter',\n          hideOnClick: options.hideOnClick !== false,\n        });\n        \n        this.instances.set(element, instance);\n      }\n    });\n  }\n\n  /**\n   * Cleanup tooltips for a specific container\n   */\n  static cleanupTooltips(container: Element) {\n    const existingTooltips = container.querySelectorAll('[data-tippy-root]');\n    existingTooltips.forEach(tooltip => {\n      // @ts-ignore\n      if (tooltip._tippy) {\n        // @ts-ignore\n        tooltip._tippy.destroy();\n      }\n    });\n\n    // Clean up tracked instances\n    this.instances.forEach((instance, element) => {\n      if (container.contains(element)) {\n        instance.destroy();\n        this.instances.delete(element);\n      }\n    });\n  }\n\n  /**\n   * Cleanup all tooltips\n   */\n  static cleanupAll() {\n    this.instances.forEach(instance => {\n      instance.destroy();\n    });\n    this.instances.clear();\n  }\n\n  /**\n   * Update tooltips for editor and rendered HTML sections\n   */\n  static updateAllTooltips(editorElement: Element, renderedSelector: string = '[data-rendered-html]', options?: TooltipOptions) {\n    // Update tooltips in the editor\n    this.initTooltips(editorElement, options);\n    \n    // Update tooltips in the rendered HTML section\n    const renderedSection = document.querySelector(renderedSelector);\n    if (renderedSection) {\n      this.initTooltips(renderedSection, options);\n    }\n  }\n\n  /**\n   * Create a tooltip for a specific element\n   */\n  static createTooltip(element: Element, content: string, options?: TooltipOptions) {\n    const instance = tippy(element, {\n      content,\n      placement: options?.placement || 'top',\n      arrow: options?.arrow !== false,\n      theme: options?.theme || 'light-border',\n      animation: options?.animation || 'scale',\n      duration: options?.duration || [200, 150],\n      interactive: options?.interactive !== false,\n      appendTo: () => document.body,\n      zIndex: options?.zIndex || 9999,\n      trigger: options?.trigger || 'mouseenter',\n      hideOnClick: options?.hideOnClick !== false,\n    });\n    \n    this.instances.set(element, instance);\n    return instance;\n  }\n\n  /**\n   * Subscribe to DOM changes and automatically update tooltips\n   */\n  static subscribe(target: Element | string, options?: TooltipOptions) {\n    const element = typeof target === 'string' ? document.querySelector(target) : target;\n    if (!element) {\n      console.warn('TooltipManager.subscribe: Target element not found');\n      return;\n    }\n\n    // Cleanup existing subscription\n    this.unsubscribe(element);\n\n    // Initial tooltip setup\n    this.initTooltips(element, options);\n\n    // Create mutation observer to watch for DOM changes\n    const observer = new MutationObserver((mutations) => {\n      let shouldUpdate = false;\n      \n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList' || mutation.type === 'attributes') {\n          shouldUpdate = true;\n        }\n      });\n\n      if (shouldUpdate) {\n        this.initTooltips(element, options);\n      }\n    });\n\n    // Start observing\n    observer.observe(element, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-title']\n    });\n\n    // Store the subscription\n    this.subscriptions.set(element, observer);\n\n    return () => this.unsubscribe(element);\n  }\n\n  /**\n   * Unsubscribe from DOM changes for a specific element\n   */\n  static unsubscribe(target: Element | string) {\n    const element = typeof target === 'string' ? document.querySelector(target) : target;\n    if (!element) return;\n\n    const observer = this.subscriptions.get(element);\n    if (observer) {\n      observer.disconnect();\n      this.subscriptions.delete(element);\n    }\n  }\n\n  /**\n   * Unsubscribe from all DOM changes\n   */\n  static unsubscribeAll() {\n    this.subscriptions.forEach(observer => {\n      observer.disconnect();\n    });\n    this.subscriptions.clear();\n  }\n}\n\n// Default export for convenience\nexport default TooltipManager;\n"],"names":["Mark","mergeAttributes"],"mappings":"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"}