{"version":3,"file":"index.js","sources":["../src/TitleModalManager.js","../src/TitleMark.ts","../src/tooltipManager.ts"],"sourcesContent":["class TitleModalManager {\n    constructor() {\n        this.isOpen = false;\n        this.currentTitle = '';\n        this.onSave = null;\n        this.modalElement = null;\n        this.inputElement = null;\n        this.init();\n    }\n\n    init() {\n        // Create modal HTML\n        this.modalElement = document.createElement('div');\n        this.modalElement.id = 'title-modal-overlay';\n        this.modalElement.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: none;\n      align-items: center;\n      justify-content: center;\n      z-index: 1000;\n    `;\n\n        const modalContent = document.createElement('div');\n        modalContent.style.cssText = `\n      background-color: #242424;\n      padding: 20px;\n      border-radius: 8px;\n      min-width: 300px;\n    `;\n\n        const title = document.createElement('h3');\n        title.id = 'title-modal-title';\n        title.style.cssText = `\n      color: #ffffffde;\n      margin-top: 0;\n      margin-bottom: 10px;\n    `;\n        title.textContent = 'Add Title';\n\n        const description = document.createElement('p');\n        description.style.cssText = `\n      color: #ffffffde;\n      margin-bottom: 15px;\n    `;\n        description.textContent = 'Enter a title for the selected text :';\n\n        this.inputElement = document.createElement('input');\n        this.inputElement.type = 'text';\n        this.inputElement.name = 'title';\n        this.inputElement.placeholder = 'Enter title...';\n        this.inputElement.autofocus = true;\n        this.inputElement.style.cssText = `\n      width: 100%;\n      padding: 8px;\n      margin-bottom: 10px;\n      border: 1px solid #ccc;\n      border-radius: 4px;\n      background-color: #242424;\n      color: #ffffffde;\n      box-sizing: border-box;\n    `;\n\n        const buttonContainer = document.createElement('div');\n        buttonContainer.style.cssText = `\n      display: flex;\n      gap: 10px;\n      justify-content: flex-end;\n    `;\n\n        const saveButton = document.createElement('button');\n        saveButton.id = 'title-modal-save';\n        saveButton.style.cssText = `\n      padding: 8px 16px;\n      background-color: #007bff;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    `;\n        saveButton.textContent = 'Add Title';\n\n        const cancelButton = document.createElement('button');\n        cancelButton.style.cssText = `\n      padding: 8px 16px;\n      background-color: #6c757d;\n      color: white;\n      border: none;\n      border-radius: 4px;\n      cursor: pointer;\n    `;\n        cancelButton.textContent = 'Cancel';\n\n        // Assemble modal\n        buttonContainer.appendChild(saveButton);\n        buttonContainer.appendChild(cancelButton);\n        modalContent.appendChild(title);\n        modalContent.appendChild(description);\n        modalContent.appendChild(this.inputElement);\n        modalContent.appendChild(buttonContainer);\n        this.modalElement.appendChild(modalContent);\n\n        // Add event listeners\n        this.modalElement.addEventListener('click', (e) => {\n            if (e.target === this.modalElement) {\n                this.closeModal();\n            }\n        });\n\n        saveButton.addEventListener('click', () => {\n            this.handleSave();\n        });\n\n        cancelButton.addEventListener('click', () => {\n            this.closeModal();\n        });\n\n        this.inputElement.addEventListener('keydown', (e) => {\n            if (e.key === 'Enter') {\n                this.handleSave();\n            } else if (e.key === 'Escape') {\n                this.closeModal();\n            }\n        });\n\n        // Ensure focus is maintained when modal opens\n        this.inputElement.addEventListener('focus', () => {\n            // Ensure the input is visible and accessible\n            this.inputElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        });\n\n        // Add to document\n        document.body.appendChild(this.modalElement);\n    }\n\n    openModal(title = '') {\n        this.currentTitle = title;\n        this.isOpen = true;\n\n        // Update UI\n        const titleElement = document.getElementById('title-modal-title');\n        const saveButton = document.getElementById('title-modal-save');\n        const isEditingExistingTitle = title !== '';\n\n        titleElement.textContent = isEditingExistingTitle ? 'Edit Title' : 'Add Title';\n        this.inputElement.value = title;\n\n        // Update button text\n        saveButton.textContent = isEditingExistingTitle\n            ? (title.trim() ? 'Update Title' : 'Remove Title')\n            : 'Add Title';\n\n        // Show modal\n        this.modalElement.style.display = 'flex';\n        \n        // Ensure autofocus works reliably with multiple approaches\n        setTimeout(() => {\n            // Try multiple focus methods for better compatibility\n            this.inputElement.focus();\n            this.inputElement.click();\n            \n            // Select all text if editing existing title\n            if (isEditingExistingTitle && title) {\n                this.inputElement.select();\n            }\n            \n            // Ensure the input is visible\n            this.inputElement.scrollIntoView({ behavior: 'smooth', block: 'center' });\n        }, 10);\n    }\n\n    closeModal() {\n        this.isOpen = false;\n        this.currentTitle = '';\n        this.modalElement.style.display = 'none';\n        this.inputElement.value = '';\n    }\n\n    handleSave() {\n        const title = this.inputElement.value;\n        if (this.onSave) {\n            this.onSave(title);\n        }\n        this.closeModal();\n    }\n\n    setSaveHandler(handler) {\n        this.onSave = handler;\n    }\n\n    destroy() {\n        if (this.modalElement && this.modalElement.parentNode) {\n            this.modalElement.parentNode.removeChild(this.modalElement);\n        }\n    }\n}\n\n// Create global instance\nlet globalModalManager = null;\n\nexport function createTitleModalManager() {\n    if (!globalModalManager) {\n        globalModalManager = new TitleModalManager();\n    }\n    return globalModalManager;\n}\n\nexport function getTitleModalManager() {\n    return globalModalManager;\n}\n\n// Auto-initialize when imported\nif (typeof window !== 'undefined') {\n    globalModalManager = new TitleModalManager();\n    window.__titleModalManager = globalModalManager;\n\n    // Set up a default save handler that will be overridden by the plugin\n    globalModalManager.setSaveHandler((title) => {\n        // This will be overridden by the plugin when it initializes\n        console.log('TitleModalManager: No save handler set, title:', title);\n    });\n}\n","import { Mark, mergeAttributes } from '@tiptap/core';\n\nexport interface TitleMarkOptions {\n  HTMLAttributes?: Record<string, any>;\n  onSave?: (title: string) => void;\n}\n\ndeclare module '@tiptap/core' {\n  interface Commands<ReturnType> {\n    title: {\n      /**\n       * Set a title mark\n       */\n      setTitle: (attributes: { title: string }) => ReturnType;\n      /**\n       * Toggle a title mark\n       */\n      toggleTitle: (attributes: { title: string }) => ReturnType;\n      /**\n       * Unset a title mark\n       */\n      unsetTitle: () => ReturnType;\n      /**\n       * Toggle title modal and handle title editing\n       */\n      toggleTitleModal: () => ReturnType;\n      /**\n       * Save title from modal\n       */\n      saveTitle: (title: string) => ReturnType;\n    };\n  }\n}\n\nexport const TitleMark = Mark.create<TitleMarkOptions>({\n  name: 'title',\n\n  addOptions() {\n    return {\n      HTMLAttributes: {},\n      onSave: () => {},\n    };\n  },\n\n  onCreate() {\n    // Set up the modal manager save handler when the extension is created\n    if (typeof window !== 'undefined' && (window as any).__titleModalManager) {\n      (window as any).__titleModalManager.setSaveHandler((title: string) => {\n        // Use the editor instance to save the title\n        if (this.editor) {\n          this.editor.chain().focus().saveTitle(title).run();\n        }\n      });\n    }\n  },\n\n  addAttributes() {\n    return {\n      title: {\n        default: null,\n        parseHTML: element => element.getAttribute('data-title'),\n        renderHTML: attributes => {\n          if (!attributes.title) {\n            return {};\n          }\n          return {\n            'data-title': attributes.title,\n          };\n        },\n      },\n    };\n  },\n\n  parseHTML() {\n    return [\n      {\n        tag: 'span[data-title]',\n      },\n    ];\n  },\n\n  renderHTML({ HTMLAttributes }) {\n    return [\n      'span',\n      mergeAttributes(this.options.HTMLAttributes || {}, HTMLAttributes),\n      0,\n    ];\n  },\n\n  addCommands() {\n    return {\n      setTitle:\n        attributes =>\n        ({ commands }) => {\n          return commands.setMark(this.name, attributes);\n        },\n      toggleTitle:\n        attributes =>\n        ({ commands }) => {\n          return commands.toggleMark(this.name, attributes);\n        },\n      unsetTitle:\n        () =>\n        ({ commands }) => {\n          return commands.unsetMark(this.name);\n        },\n      toggleTitleModal:\n        () =>\n        ({ editor, commands }) => {\n          const { from, to } = editor.state.selection;\n          \n          // Check if there's a selection\n          if (from === to) {\n            alert('Please select some text first!');\n            return false;\n          }\n\n          // Get current title if it exists\n          let currentTitle = '';\n          if (editor.isActive('title')) {\n            const attributes = editor.getAttributes('title');\n            currentTitle = attributes.title || '';\n          }\n\n          // Open the modal using the global modal manager\n          if (typeof window !== 'undefined' && (window as any).__titleModalManager) {\n            (window as any).__titleModalManager.openModal(currentTitle);\n          }\n          \n          return true;\n        },\n      saveTitle:\n        (title: string) =>\n        ({ commands }) => {\n          // If input is empty, remove the title\n          if (!title.trim()) {\n            return commands.unsetMark(this.name);\n          }\n\n          // Set or update the title\n          return commands.setMark(this.name, { title: title.trim() });\n        },\n    };\n  },\n});\n","// @ts-ignore\nimport tippy from 'tippy.js';\n\nexport interface TooltipOptions {\n  placement?: 'top' | 'bottom' | 'left' | 'right';\n  arrow?: boolean;\n  theme?: string;\n  animation?: string;\n  duration?: [number, number];\n  interactive?: boolean;\n  zIndex?: number;\n  trigger?: string;\n  hideOnClick?: boolean;\n}\n\nexport class TooltipManager {\n  private static instances: Map<Element, any> = new Map();\n  private static subscriptions: Map<Element, MutationObserver> = new Map();\n\n  /**\n   * Initialize tooltips for a container\n   */\n  static initTooltips(container: Element, options: TooltipOptions = {}) {\n    if (!container) return;\n\n    // Remove existing tooltips from this container\n    this.cleanupTooltips(container);\n\n    // Add tooltips to title-marked elements\n    const titleElements = container.querySelectorAll('[data-title]');\n    titleElements.forEach(element => {\n      const title = element.getAttribute('data-title');\n      if (title) {\n        const instance = tippy(element, {\n          content: title,\n          placement: options.placement || 'top',\n          arrow: options.arrow !== false,\n          theme: options.theme || 'light-border',\n          animation: options.animation || 'scale',\n          duration: options.duration || [200, 150],\n          interactive: options.interactive !== false,\n          appendTo: () => document.body,\n          zIndex: options.zIndex || 9999,\n          trigger: options.trigger || 'mouseenter',\n          hideOnClick: options.hideOnClick !== false,\n        });\n        \n        this.instances.set(element, instance);\n      }\n    });\n  }\n\n  /**\n   * Cleanup tooltips for a specific container\n   */\n  static cleanupTooltips(container: Element) {\n    const existingTooltips = container.querySelectorAll('[data-tippy-root]');\n    existingTooltips.forEach(tooltip => {\n      // @ts-ignore\n      if (tooltip._tippy) {\n        // @ts-ignore\n        tooltip._tippy.destroy();\n      }\n    });\n\n    // Clean up tracked instances\n    this.instances.forEach((instance, element) => {\n      if (container.contains(element)) {\n        instance.destroy();\n        this.instances.delete(element);\n      }\n    });\n  }\n\n  /**\n   * Cleanup all tooltips\n   */\n  static cleanupAll() {\n    this.instances.forEach(instance => {\n      instance.destroy();\n    });\n    this.instances.clear();\n  }\n\n  /**\n   * Update tooltips for editor and rendered HTML sections\n   */\n  static updateAllTooltips(editorElement: Element, renderedSelector: string = '[data-rendered-html]', options?: TooltipOptions) {\n    // Update tooltips in the editor\n    this.initTooltips(editorElement, options);\n    \n    // Update tooltips in the rendered HTML section\n    const renderedSection = document.querySelector(renderedSelector);\n    if (renderedSection) {\n      this.initTooltips(renderedSection, options);\n    }\n  }\n\n  /**\n   * Create a tooltip for a specific element\n   */\n  static createTooltip(element: Element, content: string, options?: TooltipOptions) {\n    const instance = tippy(element, {\n      content,\n      placement: options?.placement || 'top',\n      arrow: options?.arrow !== false,\n      theme: options?.theme || 'light-border',\n      animation: options?.animation || 'scale',\n      duration: options?.duration || [200, 150],\n      interactive: options?.interactive !== false,\n      appendTo: () => document.body,\n      zIndex: options?.zIndex || 9999,\n      trigger: options?.trigger || 'mouseenter',\n      hideOnClick: options?.hideOnClick !== false,\n    });\n    \n    this.instances.set(element, instance);\n    return instance;\n  }\n\n  /**\n   * Subscribe to DOM changes and automatically update tooltips\n   */\n  static subscribe(target: Element | string, options?: TooltipOptions) {\n    const element = typeof target === 'string' ? document.querySelector(target) : target;\n    if (!element) {\n      console.warn('TooltipManager.subscribe: Target element not found');\n      return;\n    }\n\n    // Cleanup existing subscription\n    this.unsubscribe(element);\n\n    // Initial tooltip setup\n    this.initTooltips(element, options);\n\n    // Create mutation observer to watch for DOM changes\n    const observer = new MutationObserver((mutations) => {\n      let shouldUpdate = false;\n      \n      mutations.forEach((mutation) => {\n        if (mutation.type === 'childList' || mutation.type === 'attributes') {\n          shouldUpdate = true;\n        }\n      });\n\n      if (shouldUpdate) {\n        this.initTooltips(element, options);\n      }\n    });\n\n    // Start observing\n    observer.observe(element, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['data-title']\n    });\n\n    // Store the subscription\n    this.subscriptions.set(element, observer);\n\n    return () => this.unsubscribe(element);\n  }\n\n  /**\n   * Unsubscribe from DOM changes for a specific element\n   */\n  static unsubscribe(target: Element | string) {\n    const element = typeof target === 'string' ? document.querySelector(target) : target;\n    if (!element) return;\n\n    const observer = this.subscriptions.get(element);\n    if (observer) {\n      observer.disconnect();\n      this.subscriptions.delete(element);\n    }\n  }\n\n  /**\n   * Unsubscribe from all DOM changes\n   */\n  static unsubscribeAll() {\n    this.subscriptions.forEach(observer => {\n      observer.disconnect();\n    });\n    this.subscriptions.clear();\n  }\n}\n\n// Default export for convenience\nexport default TooltipManager;\n"],"names":["Mark","mergeAttributes"],"mappings":"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"}